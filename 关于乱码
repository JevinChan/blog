    就 ls 命令而言，ls 命令会根据本地语言编码解析返回结果，再将解析好的字符返回终端。也就是说，当本地字符集为 gbk ，而 ls 的返回结果是 utf-8 编码的（utf-8字节流），返回结果会根据 gbk 字符集寻找对应的字体（找不到的就显示乱码，比如八进制或问号），再将结果字符编码（八进制或问号也是字符，即它们的编码）返回终端（显示字符的 gbk 字节流），如果终端编码也是 gbk 就显示那些找到的字符（即八进制或问号），不然再将找到的字符编码按终端编码解析，比如终端编码是 utf-8 的，就会将返回的 gbk 字节流按 utf-8 解析，乱上加乱。
    而将 ls 的结果重定向到文件，则文件内容为文件系统存储的字符，与本地语言编码和终端编码无关。
    若在终端上输入中文，解析的结果也一样。

乱码解决
    1.locale 命令查看当前语言和字符集，若有错误，使用 locale -a 查看可用语言和字符集，然后将 locale 命令中环境变量修改为可用的语言和字符集，在使用 locale 命令直到无错误；
    2.若 locale -a 中没有想用的语言和字符集，进入 /var/lib/locale/supported.d/ 目录，在文件中按已有格式添加想用的语言和字符集，然后 locale-gen 更新；重复1。
    3.locale 命令无错误下，查看使用的语言和字符集是否与终端编码一致。

补充
	locale -m 查看字符集
	fc-list 查看安装的字体	
	fc-list :lang=zh 查看安装的中文字体
